//////////////////////////////////////////////////////////////////////////////////
//	
//	Общий модуль: Проверка заполнения (клиент).
//	
//	Автор и разработчик: Мизгирев Ярослав Михайлович
//	https://github.com/YaroslavMizgirev/1C
//	telegram: https://t.me/YaroslavMizgirev
//	
//////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция - Заполнены необходимые поля объекта.
//  Проверяет заполнение необходимых полей объекта формы клиентского приложения.
//  Уведомляет пользователя о перечне незаполненных полей.
//  Переданные параметры СтандартнаяОбработка и Отказ в случае наличия незаполненных полей переводит в противоположное состояние от значений по умолчанию.
//
// Параметры:
//  Форма									 - ФормаКлиентскогоПриложения.
//  ПроверяемыеПоля				 - Строка - строка с именами полей разделенных символом ",".
//  СтандартнаяОбработка	 - Булево.
//  Отказ									 - Булево.
//  СообщатьОбОшибках			 - Булево.
// 
// Возвращаемое значение:
//   - Булево - Истина - все необходимые поля заполнены, Ложь - не все необходимые поля заполнены.
//
Функция ЗаполненыНеобходимыеПоляОбъекта(Форма,ПроверяемыеПоля,СтандартнаяОбработка=Истина,Отказ=Ложь,СообщатьОбОшибках=Истина) Экспорт
	
	ПроверяемыеПоля = СтрРазделить(ПроверяемыеПоля, ",", Ложь);
	МассивОшибок = Новый Массив;
	Для Каждого ПроверяемоеПоле Из ПроверяемыеПоля Цикл
		Если НЕ ЗначениеЗаполнено(Форма.Объект[ПроверяемоеПоле]) Тогда МассивОшибок.Добавить(_ОбработкаСтрокКлиентСервер.ИмяВСиноним(ПроверяемоеПоле)); КонецЕсли;
	КонецЦикла;
	Если МассивОшибок.Количество() > 0 Тогда
		Если СообщатьОбОшибках Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='Для продолжения заполните %1: %2'"), ?(МассивОшибок.Количество() > 1, "поля", "поле"), СтрСоединить(МассивОшибок, ", "));
			ПоказатьПредупреждение(, ТекстСообщения, 60, НСтр("ru='ПРЕДУПРЕЖДЕНИЕ';"));
		КонецЕсли;
		СтандартнаяОбработка = Не СтандартнаяОбработка;
		Отказ = Не Отказ;
	КонецЕсли;
	Возврат МассивОшибок.Количество() = 0;
	
КонецФункции

// Функция - Список ошибок заполнения полей объекта.
//  Проверяет заполнение необходимых полей объекта формы клиентского приложения.
//  Возвращает список ошибок с перечнем незаполненных полей строкой.
//  Переданные параметры СтандартнаяОбработка и Отказ в случае наличия незаполненных полей переводит в противоположное состояние от переданных значений.
//
// Параметры:
//  Форма									 - ФормаКлиентскогоПриложения.
//  ПроверяемыеПоля				 - Строка - строка с именами полей разделенных символом ",".
//  СтандартнаяОбработка	 - Булево.
//  Отказ									 - Булево.
// 
// Возвращаемое значение:
//   - Строка.
//
Функция СписокОшибокЗаполненияПолейОбъекта(Форма,ПроверяемыеПоля,СтандартнаяОбработка=Истина,Отказ=Ложь) Экспорт
	
	ПроверяемыеПоля = СтрРазделить(ПроверяемыеПоля, ",", Ложь);
	МассивОшибок = Новый Массив;
	Для Каждого ПроверяемоеПоле Из ПроверяемыеПоля Цикл
		Если НЕ ЗначениеЗаполнено(Форма.Объект[ПроверяемоеПоле]) Тогда МассивОшибок.Добавить(_ОбработкаСтрокКлиентСервер.ИмяВСиноним(ПроверяемоеПоле)); КонецЕсли;
	КонецЦикла;
	Если МассивОшибок.Количество() > 0 Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru='Для продолжения заполните %1: %2'"), ?(МассивОшибок.Количество() > 1, "поля", "поле"), СтрСоединить(МассивОшибок, ", "));
		СтандартнаяОбработка = Не СтандартнаяОбработка;
		Отказ = Не Отказ;
	Иначе
		ТекстСообщения = НСтр("ru='';");
	КонецЕсли;
	Возврат ТекстСообщения;
	
КонецФункции

// Функция - Заполнены необходимые поля формы клиентского приложения.
//  Проверяет заполнение необходимых полей формы клиентского приложения.
//  Уведомляет пользователя о перечне незаполненных полей.
//  Переданные параметры СтандартнаяОбработка и Отказ в случае наличия незаполненных полей переводит в противоположное состояние от значений по умолчанию.
//
// Параметры:
//  Форма									 - ФормаКлиентскогоПриложения.
//  ПроверяемыеПоля				 - Строка - строка с именами полей разделенных символом ",".
//  СтандартнаяОбработка	 - Булево.
//  Отказ									 - Булево.
//  СообщатьОбОшибках			 - Булево.
// 
// Возвращаемое значение:
//   - Булево - Истина - все необходимые поля заполнены, Ложь - не все необходимые поля заполнены.
//
Функция ЗаполненыНеобходимыеПоляФормы(Форма,ПроверяемыеПоля,СтандартнаяОбработка=Истина,Отказ=Ложь,СообщатьОбОшибках=Истина) Экспорт
	
	ПроверяемыеПоля = СтрРазделить(ПроверяемыеПоля, ",", Ложь);
	МассивОшибок = Новый Массив;
	Для Каждого ПроверяемоеПоле Из ПроверяемыеПоля Цикл
		Если НЕ ЗначениеЗаполнено(Форма[ПроверяемоеПоле]) Тогда МассивОшибок.Добавить(_ОбработкаСтрокКлиентСервер.ИмяВСиноним(ПроверяемоеПоле)); КонецЕсли;
	КонецЦикла;
	Если МассивОшибок.Количество() > 0 Тогда
		Если СообщатьОбОшибках Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='Для продолжения заполните %1: %2'"), ?(МассивОшибок.Количество() > 1, "поля", "поле"), СтрСоединить(МассивОшибок, ", "));
			ПоказатьПредупреждение(, ТекстСообщения, 60, НСтр("ru='ПРЕДУПРЕЖДЕНИЕ';"));
		КонецЕсли;
		СтандартнаяОбработка = Не СтандартнаяОбработка;
		Отказ = Не Отказ;
	КонецЕсли;
	Возврат МассивОшибок.Количество() = 0;
	
КонецФункции

// Функция - Заполнены необходимые поля записи регистра.
//  Проверяет заполнение необходимых полей записи регистра формы клиентского приложения.
//  Уведомляет пользователя о перечне незаполненных полей.
//  Переданные параметры СтандартнаяОбработка и Отказ в случае наличия незаполненных полей переводит в противоположное состояние от значений по умолчанию.
//
// Параметры:
//  Форма									 - ФормаКлиентскогоПриложения.
//  ПроверяемыеПоля				 - Строка - строка с именами полей разделенных символом ",".
//  СтандартнаяОбработка	 - Булево.
//  Отказ									 - Булево.
//  СообщатьОбОшибках			 - Булево.
// 
// Возвращаемое значение:
//   - Булево - Истина - все необходимые поля заполнены, Ложь - не все необходимые поля заполнены.
//
Функция ЗаполненыНеобходимыеПоляЗаписиРегистра(Форма,ПроверяемыеПоля,СтандартнаяОбработка=Истина,Отказ=Ложь,СообщатьОбОшибках=Истина) Экспорт
	
	ПроверяемыеПоля = СтрРазделить(ПроверяемыеПоля, ",", Ложь);
	МассивОшибок = Новый Массив;
	Для Каждого ПроверяемоеПоле Из ПроверяемыеПоля Цикл
		Если НЕ ЗначениеЗаполнено(Форма.Запись[ПроверяемоеПоле]) Тогда МассивОшибок.Добавить(_ОбработкаСтрокКлиентСервер.ИмяВСиноним(ПроверяемоеПоле)); КонецЕсли;
	КонецЦикла;
	Если МассивОшибок.Количество() > 0 Тогда
		Если СообщатьОбОшибках Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='Для продолжения заполните %1: %2'"), ?(МассивОшибок.Количество() > 1, "поля", "поле"), СтрСоединить(МассивОшибок, ", "));
			ПоказатьПредупреждение(, ТекстСообщения, 60, НСтр("ru='ПРЕДУПРЕЖДЕНИЕ';"));
		КонецЕсли;
		СтандартнаяОбработка = Не СтандартнаяОбработка;
		Отказ = Не Отказ;
	КонецЕсли;
	Возврат МассивОшибок.Количество() = 0;
	
КонецФункции

// Функция - Заполнены необходимые поля строки таблицы формы.
//  Проверяет заполнение необходимых полей табличной части объекта формы клиентского приложения.
//  Уведомляет пользователя о перечне незаполненных полей.
//  Переданные параметры СтандартнаяОбработка и Отказ в случае наличия незаполненных полей переводит в противоположное состояние от значений по умолчанию.
//
// Параметры:
//  Форма									 - ФормаКлиентскогоПриложения.
//  ИмяТаблицыФормы				 - Строка.
//  ПроверяемыеПоля				 - Строка.
//  СтандартнаяОбработка	 - Булево.
//  Отказ									 - Булево.
//  СообщатьОбОшибках			 - Булево.
// 
// Возвращаемое значение:
//   - Булево.
//
Функция ЗаполненыНеобходимыеПоляСтрокиТаблицыФормы(Форма,ИмяТаблицыФормы,ПроверяемыеПоля,СтандартнаяОбработка=Истина,Отказ=Ложь,СообщатьОбОшибках=Истина) Экспорт
	
	ПроверяемыеПоля = СтрРазделить(ПроверяемыеПоля, ",", Ложь);
	МассивОшибок = Новый Массив;
	Для Каждого ПроверяемоеПоле Из ПроверяемыеПоля Цикл
		Если Не ЗначениеЗаполнено(Форма.Элементы[ИмяТаблицыФормы].ТекущиеДанные[ПроверяемоеПоле]) Тогда МассивОшибок.Добавить(_ОбработкаСтрокКлиентСервер.ИмяВСиноним(ПроверяемоеПоле)); КонецЕсли;
	КонецЦикла;
	Если МассивОшибок.Количество() > 0 Тогда
		Если СообщатьОбОшибках Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='Для продолжения заполните %1 таблицы %2: %3'"), ?(МассивОшибок.Количество() > 1, "поля", "поле"), ?(ПустаяСтрока(Форма.Элементы[ИмяТаблицыФормы].Заголовок), _ОбработкаСтрокКлиентСервер.ИмяВСиноним(Форма.Элементы[ИмяТаблицыФормы].Имя), Форма.Элементы[ИмяТаблицыФормы].Заголовок), СтрСоединить(МассивОшибок, ", "));
			ПоказатьПредупреждение(, ТекстСообщения, 60, НСтр("ru='ПРЕДУПРЕЖДЕНИЕ';"));
		КонецЕсли;
		СтандартнаяОбработка = Не СтандартнаяОбработка;
		Отказ = Не Отказ;
	КонецЕсли;
	Возврат МассивОшибок.Количество() = 0;
	
КонецФункции

// Функция - Заполнены необходимые колонки табличной части.
//  Проверяет заполнение необходимых колонок табличной части объекта формы клиентского приложения.
//  Уведомляет пользователя о перечне незаполненных полей.
//  Переданные параметры СтандартнаяОбработка и Отказ в случае наличия незаполненных полей переводит в противоположное состояние от значений по умолчанию.
//
// Параметры:
//  Форма									 - ФормаКлиентскогоПриложения.
//  ИмяТабличнойЧасти			 - Строка.
//  ПроверяемыеКолонки		 - Строка.
//  СтандартнаяОбработка	 - Булево.
//  Отказ									 - Булево.
//  СообщатьОбОшибках			 - Булево.
// 
// Возвращаемое значение:
//   - Булево.
//
Функция ЗаполненыНеобходимыеКолонкиТабличнойЧасти(Форма,ИмяТабличнойЧасти,ПроверяемыеКолонки,СтандартнаяОбработка=Истина,Отказ=Ложь,СообщатьОбОшибках=Истина) Экспорт
	
	ПроверяемыеКолонки = СтрРазделить(ПроверяемыеКолонки, ",", Ложь);
	МассивОшибок = Новый Массив;
	Если Форма.Объект[ИмяТабличнойЧасти].Количество()=0 Тогда
		Для Каждого ПроверяемаяКолонка Из ПроверяемыеКолонки Цикл
			МассивОшибок.Добавить(_ОбработкаСтрокКлиентСервер.ИмяВСиноним(ПроверяемаяКолонка));
		КонецЦикла;
		
	Иначе
		Для Каждого Строка Из Форма.Объект[ИмяТабличнойЧасти] Цикл
			Для Каждого ПроверяемаяКолонка Из ПроверяемыеКолонки Цикл
				Если Не ЗначениеЗаполнено(Строка[ПроверяемаяКолонка]) Тогда
					МассивОшибок.Добавить(_ОбработкаСтрокКлиентСервер.ИмяВСиноним(ПроверяемаяКолонка));
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	Если МассивОшибок.Количество() > 0 Тогда
		Если СообщатьОбОшибках Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='Для продолжения заполните %1 таблицы %2: %3'"), ?(МассивОшибок.Количество() > 1, "колонки", "колонку"), ?(ПустаяСтрока(Форма.Элементы[ИмяТабличнойЧасти].Заголовок), _ОбработкаСтрокКлиентСервер.ИмяВСиноним(Форма.Элементы[ИмяТабличнойЧасти].Имя), Форма.Элементы[ИмяТабличнойЧасти].Заголовок), СтрСоединить(МассивОшибок, ", "));
			ПоказатьПредупреждение(, ТекстСообщения, 60, НСтр("ru='ПРЕДУПРЕЖДЕНИЕ';"));
		КонецЕсли;
		СтандартнаяОбработка = Не СтандартнаяОбработка;
		Отказ = Не Отказ;
	КонецЕсли;
	Возврат МассивОшибок.Количество() = 0;
	
КонецФункции

// Функция - Список ошибок заполнения колонок табличной части.
//  Проверяет заполнение необходимых колонок табличной части объекта формы клиентского приложения.
//  Возвращает список ошибок с перечнем незаполненных полей строкой.
//  Переданные параметры СтандартнаяОбработка и Отказ в случае наличия незаполненных полей переводит в противоположное состояние от переданных значений.
//
// Параметры:
//  Форма									 - ФормаКлиентскогоПриложения.
//  ИмяТабличнойЧасти			 - Строка.
//  ПроверяемыеКолонки		 - Строка.
//  СтандартнаяОбработка	 - Булево.
//  Отказ									 - Булево.
// 
// Возвращаемое значение:
//   - Строка.
//
Функция СписокОшибокЗаполненияКолонокТабличнойЧасти(Форма,ИмяТабличнойЧасти,ПроверяемыеКолонки,СтандартнаяОбработка=Истина,Отказ=Ложь) Экспорт
	
	ПроверяемыеКолонки = СтрРазделить(ПроверяемыеКолонки, ",", Ложь);
	МассивОшибок = Новый Массив;
	Если Форма.Объект[ИмяТабличнойЧасти].Количество()=0 Тогда
		Для Каждого ПроверяемаяКолонка Из ПроверяемыеКолонки Цикл
			МассивОшибок.Добавить(_ОбработкаСтрокКлиентСервер.ИмяВСиноним(ПроверяемаяКолонка));
		КонецЦикла;
		
	Иначе
		Для Каждого Строка Из Форма.Объект[ИмяТабличнойЧасти] Цикл
			Для Каждого ПроверяемаяКолонка Из ПроверяемыеКолонки Цикл
				Если Не ЗначениеЗаполнено(Строка[ПроверяемаяКолонка]) Тогда
					МассивОшибок.Добавить(_ОбработкаСтрокКлиентСервер.ИмяВСиноним(ПроверяемаяКолонка));
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	Если МассивОшибок.Количество() > 0 Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru='Для продолжения заполните %1 таблицы %2: %3'"), ?(МассивОшибок.Количество() > 1, "колонки", "колонку"), ?(ПустаяСтрока(Форма.Элементы[ИмяТабличнойЧасти].Заголовок), _ОбработкаСтрокКлиентСервер.ИмяВСиноним(Форма.Элементы[ИмяТабличнойЧасти].Имя), Форма.Элементы[ИмяТабличнойЧасти].Заголовок), СтрСоединить(МассивОшибок, ", "));
		СтандартнаяОбработка = Не СтандартнаяОбработка;
		Отказ = Не Отказ;
	Иначе
		ТекстСообщения = НСтр("ru='';");
	КонецЕсли;
	Возврат ТекстСообщения;
	
КонецФункции

// Функция - Пустые необходимые поля объекта.
//
// Параметры:
//  Форма									 - ФормаКлиентскогоПриложения.
//  ПроверяемыеПоля				 - Строка - строка с именами полей разделенных символом ",".
//  СтандартнаяОбработка	 - Булево.
//  Отказ									 - Булево.
//  СообщатьОбОшибках			 - Булево.
// 
// Возвращаемое значение:
//   - Булево.
//
Функция ПустыеНеобходимыеПоляОбъекта(Форма,ПроверяемыеПоля,СтандартнаяОбработка=Истина,Отказ=Ложь,СообщатьОбОшибках=Истина) Экспорт
	
	ПроверяемыеПоля = СтрРазделить(ПроверяемыеПоля, ",", Ложь);
	МассивОшибок = Новый Массив;
	Для Каждого ПроверяемоеПоле Из ПроверяемыеПоля Цикл
		Если ЗначениеЗаполнено(Форма.Объект[ПроверяемоеПоле]) Тогда МассивОшибок.Добавить(_ОбработкаСтрокКлиентСервер.ИмяВСиноним(ПроверяемоеПоле)); КонецЕсли;
	КонецЦикла;
	Если МассивОшибок.Количество() > 0 Тогда
		Если СообщатьОбОшибках Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='Для продолжения очистите %1: %2'"), ?(МассивОшибок.Количество() > 1, "поля", "поле"), СтрСоединить(МассивОшибок, ", "));
			ПоказатьПредупреждение(, ТекстСообщения, 60, НСтр("ru='ПРЕДУПРЕЖДЕНИЕ';"));
		КонецЕсли;
		СтандартнаяОбработка = Не СтандартнаяОбработка;
		Отказ = Не Отказ;
	КонецЕсли;
	Возврат МассивОшибок.Количество() = 0;
	
КонецФункции

#КонецОбласти
